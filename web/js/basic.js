const a=["scene","staff","type","platform"];export function match(r,e){{let t=new Set;for(let o of e.staff)if(o!=="F")for(let s of e.skin[o])t.add(s);let n=Array.from(t);if(n.length!==0&&!f(r.skin,n))return!1}for(let t of a)if(!f(r[t],e[t]))return!1;if(r.titlestr===""&&r.tagstr===""&&r.typestr===""||e.title.toLowerCase().indexOf(r.titlestr.toLowerCase())!==-1)return!0;for(let t of e.tags)if(t.toLowerCase().indexOf(r.tagstr.toLowerCase())!==-1)return!0;for(let t of e.items)for(let n of t.item)if(n[0].toLowerCase().indexOf(r.typestr.toLowerCase())!==-1)return!0;return!1}export function getJsonData(r){var e=new XMLHttpRequest;e.open("GET",r,!1),e.send(null);let t;try{t=JSON.parse(e.responseText)}catch(n){t={title:"error"}}finally{return t}}export function postJsonData(r,e){var t=new XMLHttpRequest;t.open("POST",r,!1),t.setRequestHeader("Content-Type","application/json");let n=JSON.stringify(e);t.send(n);let o;try{o=JSON.parse(t.responseText)}catch(s){o={title:"error"}}finally{return o}}export function getData(r){var e=new XMLHttpRequest;e.open("GET",r,!1),e.send(null);let t;if(e.status!==200)throw e.status;try{t=e.responseText}catch(n){throw t="error http",t}finally{return t}}export function reverseArray(r){let e=[];for(let t=r.length-1;t>=0;t--)e.push(r[t]);return e}function f(r,e){return r.length+e.length!==Array.from(new Set([...r,...e])).length}
